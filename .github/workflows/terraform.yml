name: Terraform Pipeline

on:
  push:
    branches:
      - "*"           # Auto Plan on any branch push

  workflow_dispatch:   # Manual trigger for Apply
    inputs:
      run_apply:
        description: "Do you want to run Terraform Apply?"
        required: true
        default: "no"
        type: choice
        options:
          - yes
          - no

jobs:
  plan:
    name: Terraform Plan (Auto)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: Deployment

      - name: Terraform Plan
        run: terraform plan -var="key_pair_name=${{ secrets.KEY_PAIR_NAME }}"
        working-directory: Deployment

  apply:
    name: Terraform Apply (Manual)
    if: github.event.inputs.run_apply == 'yes'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: Deployment

      - name: Terraform Apply
        run: terraform apply -var="key_pair_name=${{ secrets.KEY_PAIR_NAME }}" --auto-approve
        working-directory: Deployment
